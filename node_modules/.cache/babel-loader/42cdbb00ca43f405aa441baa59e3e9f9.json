{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/usuario/Desktop/portfolio-cliente-main/src/context/auth/authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport authContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport clienteAxios from \"../../service/axios\";\nimport tokenAuth from \"../../config/token\";\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, LOGIN_EXITOSO, LOGIN_ERROR, LOGOUT, OBTENER_USUARIO } from \"../../types\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // 1. Registra al nuevo usuario\n\n  const registrarUsuario = async datos => {\n    try {\n      const resultado = await clienteAxios.post(\"/users\", datos); // Estoy enviando el TOKEN\n\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: resultado.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      // console.log(error.response.data.msg);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // 2. Retorna el usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      tokenAuth(token);\n      console.log(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get(\"/auth\");\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; // 3. Iniciar Sesi贸n\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"/auth\", datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      }); // Traigo el usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  }; // 4. Cerrar Sesi贸n\n\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      usuarioAutenticado,\n      iniciarSesion,\n      cerrarSesion\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/usuario/Desktop/portfolio-cliente-main/src/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","LOGIN_EXITOSO","LOGIN_ERROR","LOGOUT","OBTENER_USUARIO","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registrarUsuario","datos","resultado","post","type","payload","data","usuarioAutenticado","error","alerta","msg","response","categoria","console","log","respuesta","get","iniciarSesion","cerrarSesion","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport authContext from \"./authContext\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nimport clienteAxios from \"../../service/axios\";\r\n\r\nimport tokenAuth from \"../../config/token\";\r\n\r\nimport {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  LOGOUT,\r\n  OBTENER_USUARIO,\r\n} from \"../../types\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // 1. Registra al nuevo usuario\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/users\", datos);\r\n\r\n      // Estoy enviando el TOKEN\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: resultado.data,\r\n      });\r\n\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      // console.log(error.response.data.msg);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  // 2. Retorna el usuario autenticado\r\n  const usuarioAutenticado = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      tokenAuth(token);\r\n      console.log(token);\r\n    }\r\n\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/auth\");\r\n      dispatch({\r\n        type: OBTENER_USUARIO,\r\n        payload: respuesta.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  // 3. Iniciar Sesi贸n\r\n\r\n  const iniciarSesion = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"/auth\", datos);\r\n\r\n      dispatch({\r\n        type: LOGIN_EXITOSO,\r\n        payload: respuesta.data,\r\n      });\r\n\r\n      // Traigo el usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  // 4. Cerrar Sesi贸n\r\n  const cerrarSesion = () => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <authContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        registrarUsuario,\r\n        usuarioAutenticado,\r\n        iniciarSesion,\r\n        cerrarSesion,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}