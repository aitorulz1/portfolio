{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/usuario/Desktop/portfolio-cliente-main/src/context/proyectos/proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport clienteAxios from '../../service/axios';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { MOSTRAR_FORMULARIO, AGREGAR_PROYECTOS, OBTENER_PROYECTOS, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, PROYECTO_ERROR } from '../../types';\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    category: null,\n    proyecto: null,\n    proyectoeditar: null\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: MOSTRAR_FORMULARIO\n    });\n  };\n\n  const obtenerProyectos = async proyectos => {\n    try {\n      const resultado = await clienteAxios.get('/products', proyectos);\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/products', proyecto);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const obtenerCategory = async category => {\n    try {\n      const resultado = await clienteAxios.get('/category/:category', category);\n    } catch (error) {\n      const alerta = {\n        msg: 'Hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Selecciona el proyecto que queremos ver\n\n\n  const proyectoActual = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get(`/products/${proyecto}`, proyecto);\n      dispatch({\n        type: PROYECTO_ACTUAL,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'No recibo objeto',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const eliminarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.delete(`/products/${proyecto}`, proyecto);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'No recibo objeto',\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      category: state.category,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      obtenerCategory,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/Users/usuario/Desktop/portfolio-cliente-main/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","clienteAxios","proyectoContext","proyectoReducer","MOSTRAR_FORMULARIO","AGREGAR_PROYECTOS","OBTENER_PROYECTOS","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","ProyectoState","props","initialState","proyectos","formulario","category","proyecto","proyectoeditar","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","msg","categoria","agregarProyecto","post","console","log","obtenerCategory","proyectoActual","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport clienteAxios from '../../service/axios';\r\n\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\n\r\nimport {\r\n    MOSTRAR_FORMULARIO,\r\n    AGREGAR_PROYECTOS,\r\n    OBTENER_PROYECTOS,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO,\r\n    PROYECTO_ERROR\r\n} from '../../types';\r\n\r\n\r\n\r\nconst ProyectoState = props => {\r\n\r\n    const initialState = {\r\n        proyectos: [],\r\n        formulario: false,\r\n        category: null,\r\n        proyecto: null,\r\n        proyectoeditar: null\r\n    }\r\n    \r\n    const [ state, dispatch ] = useReducer(proyectoReducer, initialState);\r\n\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: MOSTRAR_FORMULARIO            \r\n        })\r\n    }\r\n\r\n    const obtenerProyectos = async proyectos => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/products', proyectos)\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    const agregarProyecto = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.post('/products', proyecto);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type: AGREGAR_PROYECTOS,\r\n                payload: resultado.data\r\n            })\r\n            \r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    const obtenerCategory = async category => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/category/:category', category)\r\n\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n    // Selecciona el proyecto que queremos ver\r\n    const proyectoActual = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.get(`/products/${proyecto}`, proyecto)       \r\n\r\n            dispatch({\r\n                type: PROYECTO_ACTUAL,  \r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'No recibo objeto',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    const eliminarProyecto = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.delete(`/products/${proyecto}`, proyecto)\r\n\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'No recibo objeto',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                category: state.category,\r\n                proyecto: state.proyecto,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                obtenerCategory,\r\n                proyectoActual,\r\n                eliminarProyecto,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default ProyectoState;\r\n"]},"metadata":{},"sourceType":"module"}