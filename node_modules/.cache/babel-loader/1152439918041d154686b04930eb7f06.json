{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/usuario/Desktop/portfolio-cliente-main/src/context/proyectos/proyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport clienteAxios from \"../../service/axios\";\nimport proyectoContext from \"./proyectoContext\";\nimport proyectoReducer from \"./proyectoReducer\";\nimport projectsData from \"../../data/projects.json\";\nimport { MOSTRAR_FORMULARIO, AGREGAR_PROYECTOS, OBTENER_PROYECTOS, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, PROYECTO_ERROR } from \"../../types\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    proyectos: projectsData,\n    formulario: false,\n    category: null,\n    proyecto: null,\n    proyectoeditar: null\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: MOSTRAR_FORMULARIO\n    });\n  };\n\n  const obtenerProyectos = async proyectos => {\n    try {\n      const resultado = await clienteAxios.get(\"/products\", proyectos);\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post(\"/products\", proyecto);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_PROYECTOS,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const obtenerCategory = async category => {\n    try {\n      const resultado = await clienteAxios.get(\"/category/:category\", category);\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Selecciona el proyecto que queremos ver\n\n\n  const proyectoActual = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get(`/products/${proyecto}`, proyecto);\n      dispatch({\n        type: PROYECTO_ACTUAL,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"No recibo objeto\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  const eliminarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.delete(`/products/${proyecto}`, proyecto);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"No recibo objeto\",\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      category: state.category,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      obtenerCategory,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/Users/usuario/Desktop/portfolio-cliente-main/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","clienteAxios","proyectoContext","proyectoReducer","projectsData","MOSTRAR_FORMULARIO","AGREGAR_PROYECTOS","OBTENER_PROYECTOS","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","ProyectoState","props","initialState","proyectos","formulario","category","proyecto","proyectoeditar","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","msg","categoria","agregarProyecto","post","console","log","obtenerCategory","proyectoActual","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport clienteAxios from \"../../service/axios\";\r\n\r\nimport proyectoContext from \"./proyectoContext\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\n\r\nimport projectsData from \"../../data/projects.json\";\r\n\r\nimport {\r\n  MOSTRAR_FORMULARIO,\r\n  AGREGAR_PROYECTOS,\r\n  OBTENER_PROYECTOS,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\nconst ProyectoState = (props) => {\r\n  const initialState = {\r\n    proyectos: projectsData,\r\n    formulario: false,\r\n    category: null,\r\n    proyecto: null,\r\n    proyectoeditar: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: MOSTRAR_FORMULARIO,\r\n    });\r\n  };\r\n\r\n  const obtenerProyectos = async (proyectos) => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/products\", proyectos);\r\n\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  const agregarProyecto = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/products\", proyecto);\r\n      console.log(resultado);\r\n      dispatch({\r\n        type: AGREGAR_PROYECTOS,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  const obtenerCategory = async (category) => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/category/:category\", category);\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Selecciona el proyecto que queremos ver\r\n  const proyectoActual = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\r\n        `/products/${proyecto}`,\r\n        proyecto\r\n      );\r\n\r\n      dispatch({\r\n        type: PROYECTO_ACTUAL,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"No recibo objeto\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  const eliminarProyecto = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.delete(\r\n        `/products/${proyecto}`,\r\n        proyecto\r\n      );\r\n\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"No recibo objeto\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <proyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        category: state.category,\r\n        proyecto: state.proyecto,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        obtenerCategory,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </proyectoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProyectoState;\r\n"]},"metadata":{},"sourceType":"module"}